name: CI

on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache rustup
        id: cache-rustup
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/
            ~/.cargo/env
            ~/.cargo/config.toml
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /opt/android-sdk/
          key: lints-workflow-${{ matrix.build }}-rustup

      - id: rustup-setup
        if: steps.cache-rustup.outputs.cache-hit != 'true'
        name: Install Rustup and toolchains
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail "https://sh.rustup.rs" | sh -s -- -y --no-modify-path --profile minimal --default-toolchain nightly -c clippy,rustfmt 
          source "${HOME}/.cargo/env"
          echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
          echo "CARGO_HOME=${CARGO_HOME:-$HOME/.cargo}" >> $GITHUB_ENV
          rustup component add rust-src
          cargo install bpf-linker
      - name: Set Rust environment
        if: steps.cache-rustup.outputs.cache-hit == 'true'
        shell: bash
        run: |
          echo "CARGO_HOME=${CARGO_HOME:-$HOME/.cargo}" >> $GITHUB_ENV
          echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
          source "${HOME}/.cargo/env"

      - id: ndk-setup
        if: steps.cache-rustup.outputs.cache-hit != 'true'
        name: Install Android NDK
        shell: bash
        run: |
          apt update
          apt install -y openjdk-21-jdk-headless
          mkdir /opt/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-13114758_latest.zip -O /opt/android-sdk/commandlinetools.zip
          unzip /opt/android-sdk/commandlinetools.zip -d /opt/android-sdk
          rm /opt/android-sdk/commandlinetools.zip
          yes | /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk --licenses || if [ $? -ne '141' ]; then exit $?; fi; > /dev/null
          /opt/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android-sdk --install "ndk;29.0.13113456"
          echo "[target.aarch64-linux-android]" >> ${HOME}/.cargo/config.toml
          echo "ar = \"/opt/android-sdk/ndk/29.0.13113456/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\"" >> ${HOME}/.cargo/config.toml
          echo "linker = \"/opt/android-sdk/ndk/29.0.13113456/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android35-clang\"" >> ${HOME}/.cargo/config.toml
      
      - name: build ndk-setup
        run: cargo +nightly build -Zbuild-std --target aarch64-linux-android --release -j 8
      - name: Run cargo check
        run: cargo check --all-features --all-targets --verbose
      - name: Run cargo test
        run: cargo test --all-features --all-targets --verbose
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: |
          cargo clippy --package aegis --all-targets --all-features  -- -D warnings
          cargo clippy --package ebpf-common --all-targets --all-features -- -D warnings
          # cargo clippy -Zbuild-std --package ebpf-core --all-targets --all-features -- -D warnings
